[
    {
        "steps": [
            [
                {
                    "name": "p",
                    "value": [
                        {
                            "name": "img",
                            "attributes": {
                                "src": "https://cloud.githubusercontent.com/assets/5138735/8224683/6bf74d38-1593-11e5-9dac-a94892e13cbc.jpg",
                                "style": "width: 800px; height: 500px; max-height: none; max-width: none; position: absolute; z-index: 4; left: 100px; top: 6px;",
                                "class": "absolute-element"
                            }
                        }
                    ]
                },
                {
                    "name": "h2",
                    "attributes": {
                        "class": "absolute-element",
                        "style": "position: absolute; width: 800px; height: 300px; z-index: 4; left: 100px; top: 550px;"
                    },
                    "value": "Event Driven Overview"
                }
            ]
        ]
    },
    {
        "steps": [
            [
                {
                    "name": "p",
                    "value": [
                        {
                            "name": "img",
                            "attributes": {
                                "src": "https://cloud.githubusercontent.com/assets/5138735/8225468/aa893d86-159d-11e5-9687-4cedaacfb151.jpg",
                                "style": "width: 800px; height: 500px; max-height: none; max-width: none; position: absolute; z-index: 4; left: 100px; top: 6px;",
                                "class": "absolute-element"
                            }
                        }
                    ]
                },
                {
                    "name": "h3",
                    "attributes": {
                        "class": "absolute-element",
                        "style": "position: absolute; width: 800px; height: 300px; z-index: 4; left: 100px; top: 550px;"
                    },
                    "value": "Software Components Exchange Information"
                },
                {
                    "name": "notes",
                    "value": [
                        "Itai: Every Software system is based on multiple software components",
                        "Those components exchange information between them constantly"
                    ]
                }
            ]
        ]
    },
    {
        "steps": [
            [
                {
                    "name": "p",
                    "value": [
                        {
                            "name": "img",
                            "attributes": {
                                "src": "https://cloud.githubusercontent.com/assets/5138735/8224774/0a14213e-1595-11e5-9f6a-24aa8bc43660.jpg",
                                "style": "width: 400px; height: 500px; max-height: none; max-width: none; position: absolute; z-index: 4; left: 300px; top: 6px;",
                                "class": "absolute-element"
                            }
                        }
                    ]
                },
                {
                    "name": "h3",
                    "attributes": {
                        "class": "absolute-element",
                        "style": "position: absolute; width: 800px; height: 300px; z-index: 4; left: 100px; top: 550px;"
                    },
                    "value": "Producers Supply Information"
                },
                {
                    "name": "notes",
                    "value": [
                        "Miki: Information exchanging requires two side",
                        "One is the producers, which creates, and supply the information"
                    ]
                }
            ]
        ]
    },
    {
        "steps": [
            [
                {
                    "name": "p",
                    "value": [
                        {
                            "name": "img",
                            "attributes": {
                                "src": "https://cloud.githubusercontent.com/assets/3624786/8219235/3913b90c-1551-11e5-979d-43e3a268d00b.png",
                                "style": "width: 800px; height: 500px; max-height: none; max-width: none; position: absolute; z-index: 4; left: 100px; top: 6px;",
                                "class": "absolute-element"
                            }
                        }
                    ]
                },
                {
                    "name": "h3",
                    "attributes": {
                        "class": "absolute-element",
                        "style": "position: absolute; width: 800px; height: 300px; z-index: 4; left: 100px; top: 550px;"
                    },
                    "value": "Consumers Receive Information"
                },
                {
                    "name": "notes",
                    "value": [
                        "Mik: The second is the consumer, which consumes and handle this information"
                    ]
                }
            ]
        ]
    },
    {
        "steps": [
            [
                {
                    "name": "p",
                    "value": [
                        {
                            "name": "img",
                            "attributes": {
                                "src": "https://cloud.githubusercontent.com/assets/3624786/7649629/72809512-faf7-11e4-83e1-155d6b1b804c.png",
                                "style": "width: 800px; height: 500px; max-height: none; max-width: none; position: absolute; z-index: 4; left: 100px; top: 6px;",
                                "class": "absolute-element"
                            }
                        }
                    ]
                },
                {
                    "name": "h3",
                    "attributes": {
                        "class": "absolute-element",
                        "style": "position: absolute; width: 800px; height: 300px; z-index: 4; left: 100px; top: 550px;"
                    },
                    "value": "How Does Information Flow?"
                },
                {
                    "name": "notes",
                    "value": [
                        "Itai: Easy, But how does information flow?"
                    ]
                }
            ]
        ]
    },
    {
        "steps": [
            [
                {
                    "name": "p",
                    "value": [
                        {
                            "name": "img",
                            "attributes": {
                                "src": "https://cloud.githubusercontent.com/assets/3624786/8147869/e8f88508-1288-11e5-83e7-0453ab273d35.gif",
                                "style": "width: 800px; height: 500px; max-height: none; max-width: none; position: absolute; z-index: 4; left: 100px; top: 6px;",
                                "class": "absolute-element"
                            }
                        },
                        {
                            "name": "img",
                            "attributes": {
                                "src": "https://cloud.githubusercontent.com/assets/5138735/8226612/e08821da-15a8-11e5-90dd-513a04e7cdc7.jpg",
                                "style": "width: 800px; height: 500px; max-height: none; max-width: none; position: absolute; z-index: 4; left: 100px; top: 6px;",
                                "class": "absolute-element fragment",
                                "data-fragment-index": "0"
                            }
                        },
                        {
                            "name": "img",
                            "attributes": {
                                "src": "https://cloud.githubusercontent.com/assets/5138735/8226578/a2d88df2-15a8-11e5-89a0-592cb89a57d2.jpg",
                                "style": "width: 800px; height: 500px; max-height: none; max-width: none; position: absolute; z-index: 4; left: 100px; top: 6px;",
                                "class": "absolute-element fragment",
                                "data-fragment-index": "1"
                            }
                        }
                    ]
                },
                {
                    "name": "div",
                    "attributes": {
                        "class": "absolute-element",
                        "style": "position: absolute; width: 800px; height: 300px; z-index: 4; left: 100px; top: 550px;"
                    },
                    "value": [
                        {
                            "name": "h3",
                            "value": "Pull:"
                        },
                        {
                            "name": "h3",
                            "value": "Request/Response & Direct API Call Model"
                        }
                    ]
                },
                {
                    "name": "notes",
                    "value": [
                        "Miki: There are multiple models for this kind of interaction right?",
                        "One model, is based on Pulling",
                        "An example for that, can be the request, response Model, Or direct API calls"
                    ]
                }
            ]
        ]
    },
    {
        "steps": [
            [
                {
                    "name": "p",
                    "value": [
                        {
                            "name": "img",
                            "attributes": {
                                "src": "https://cloud.githubusercontent.com/assets/3624786/7750603/da33b55a-ffdd-11e4-9109-3c7c68c7cb1e.gif",
                                "style": "width: 800px; height: 500px; max-height: none; max-width: none; position: absolute; z-index: 4; left: 100px; top: 6px;",
                                "class": "absolute-element"
                            }
                        },
                        {
                            "name": "img",
                            "attributes": {
                                "src": "https://cloud.githubusercontent.com/assets/5138735/8225921/b90f5b88-15a2-11e5-9bc0-b44bfd412497.jpg",
                                "style": "width: 800px; height: 500px; max-height: none; max-width: none; position: absolute; z-index: 4; left: 100px; top: 6px;",
                                "class": "absolute-element fragment",
                                "data-fragment-index": "0"
                            }
                        },
                        {
                            "name": "img",
                            "attributes": {
                                "src": "https://cloud.githubusercontent.com/assets/5138735/8225910/88b26bb0-15a2-11e5-9097-5d27f619422a.jpg",
                                "style": "width: 800px; height: 500px; max-height: none; max-width: none; position: absolute; z-index: 4; left: 100px; top: 6px;",
                                "class": "absolute-element fragment",
                                "data-fragment-index": "1"
                            }
                        },
                        {
                            "name": "img",
                            "attributes": {
                                "src": "https://cloud.githubusercontent.com/assets/5138735/8225890/52b11052-15a2-11e5-9c8e-2b2a64a99aad.jpg",
                                "style": "width: 800px; height: 500px; max-height: none; max-width: none; position: absolute; z-index: 4; left: 100px; top: 6px;",
                                "class": "absolute-element fragment",
                                "data-fragment-index": "2"
                            }
                        }
                    ]
                },
                {
                    "name": "div",
                    "attributes": {
                        "class": "absolute-element",
                        "style": "position: absolute; width: 800px; height: 300px; z-index: 4; left: 100px; top: 550px;"
                    },
                    "value": [
                        {
                            "name": "h3",
                            "value": "Push:"
                        },
                        {
                            "name": "h3",
                            "value": "Callback Model"
                        }
                    ]
                },
                {
                    "name": "notes",
                    "value": [
                        "Miki: Another option, is a Push based model, such as callbacks",
                        "Example: reading a file in NodeJS providing callback for when the file is ready."
                    ]
                }
            ]
        ]
    },
    {
        "steps": [
            [
                {
                    "name": "p",
                    "value": [
                        {
                            "name": "img",
                            "attributes": {
                                "src": "https://cloud.githubusercontent.com/assets/3624786/7652512/00810f72-fb16-11e4-8773-f123daa53986.png",
                                "style": "width: 800px; height: 500px; max-height: none; max-width: none; position: absolute; z-index: 4; left: 100px; top: 6px;",
                                "class": "absolute-element"
                            }
                        }
                    ]
                },
                {
                    "name": "h3",
                    "attributes": {
                        "class": "absolute-element",
                        "style": "position: absolute; width: 800px; height: 300px; z-index: 4; left: 100px; top: 550px;"
                    },
                    "value": "The Consumer Needs to Know The Producer"
                },
                {
                    "name": "notes",
                    "value": [
                        "Itai: Yep, but those requires that the consumer will know the producer",
                        "This means that the consumer needs to hold a reference to the producer in order to call its API"
                    ]
                }
            ]
        ]
    },
    {
        "steps": [
            [
                {
                    "name": "div",
                    "value": [
                        {
                            "name": "span",
                            "attributes": {
                                "style": "font-style: italic; font-weight: bold; font-size: 52px; line-height: 70px;"
                            },
                            "value": "\"Each part of the architecture is like a puzzle, No single piece needs to know what the picture is, All that matters is that the piece does its own job correctly\"<br><br>"
                        },
                        {
                            "name": "span",
                            "attributes": {
                                "style": "font-size: 20px;"
                            },
                            "value": " - Nicholas Zakas, "
                        },
                        {
                            "name": "a",
                            "attributes": {
                                "href": "http://www.slideshare.net/nzakas/scalable-javascript-application-architecture",
                                "style": "font-size: 20px; text-decoration: none; color: black;"
                            },
                            "value": "Scalable JavaScript Application Architecture"
                        }
                    ]
                },
                {
                    "name": "notes",
                    "value": "In order to ensure low coupling, in large scale applications, modules must be entirely independent of one another, and should not communicate directly with one another."
                },
                {
                    "name": "notes",
                    "value": [
                        "Itai: When we want to create a scalable architecture, it is better to treat each part as a puzzle piece which should not know the other pieces but only it's part inside the puzzle",
                        "Miki: Right, Do only one job, but do it well"
                    ]
                }
            ]
        ]
    },
    {
        "steps": [
            [
                {
                    "name": "p",
                    "value": [
                        {
                            "name": "img",
                            "attributes": {
                                "src": "https://cloud.githubusercontent.com/assets/3624786/7653368/039489a2-fb1e-11e4-801c-8197019ad6a8.png",
                                "style": "width: 800px; height: 500px; max-height: none; max-width: none; position: absolute; z-index: 4; left: 100px; top: 6px;",
                                "class": "absolute-element"
                            }
                        },
                        {
                            "name": "img",
                            "attributes": {
                                "src": "https://cloud.githubusercontent.com/assets/5138735/8226313/3484f428-15a6-11e5-8123-d62bbd3a291c.jpg",
                                "style": "width: 800px; height: 500px; max-height: none; max-width: none; position: absolute; z-index: 4; left: 100px; top: 6px;",
                                "class": "absolute-element fragment",
                                "data-fragment-index": "0"
                            }
                        },
                        {
                            "name": "img",
                            "attributes": {
                                "src": "https://cloud.githubusercontent.com/assets/5138735/8226289/030237a8-15a6-11e5-9dfa-0943fddd9c11.jpg",
                                "style": "width: 800px; height: 500px; max-height: none; max-width: none; position: absolute; z-index: 4; left: 100px; top: 6px;",
                                "class": "absolute-element fragment",
                                "data-fragment-index": "1"
                            }
                        },
                        {
                            "name": "img",
                            "attributes": {
                                "src": "https://cloud.githubusercontent.com/assets/5138735/8226279/f2a92fc4-15a5-11e5-99cb-cdc0860a959e.jpg",
                                "style": "width: 800px; height: 500px; max-height: none; max-width: none; position: absolute; z-index: 4; left: 100px; top: 6px;",
                                "class": "absolute-element fragment",
                                "data-fragment-index": "2"
                            }
                        },
                        {
                            "name": "img",
                            "attributes": {
                                "src": "https://cloud.githubusercontent.com/assets/5138735/8226126/8eada276-15a4-11e5-84e6-16b3656a8459.jpg",
                                "style": "width: 800px; height: 500px; max-height: none; max-width: none; position: absolute; z-index: 4; left: 100px; top: 6px;",
                                "class": "absolute-element fragment",
                                "data-fragment-index": "3"
                            }
                        }
                    ]
                },
                {
                    "name": "h3",
                    "attributes": {
                        "class": "absolute-element",
                        "style": "position: absolute; width: 800px; height: 300px; z-index: 4; left: 100px; top: 550px;"
                    },
                    "value": "Event Driven (Mainly Follows the Pub/Sub Pattern)"
                },
                {
                    "name": "notes",
                    "value": [
                        "Miki: And this brings us, to a third model, which is the event driven model also referred to as Pub/Sub or Observer",
                        "So How does event driven works?",
                        "Both, consumer and producer, know only one entity in the system, the Event Bus",
                        "Event bus holds all the registered consumers and when triggered by the producer, it will publish an event to all registered consumers"
                    ]
                }
            ]
        ]
    },
    {
        "steps": [
            [
                {
                    "name": "h2",
                    "value": "Pros"
                },
                {
                    "name": "img",
                    "attributes": {
                        "src": "https://cloud.githubusercontent.com/assets/3624786/8115653/8bc14802-1085-11e5-9372-962cc31afae6.png",
                        "style": "width: 120px;"
                    }
                },
                {
                    "name": "div",
                    "attributes": {
                        "style": "height: 800px;"
                    },
                    "value": [
                        {
                            "name": "ul",
                            "value": [
                                {
                                    "name": "li",
                                    "attributes": {
                                        "class": "fragment",
                                        "data-fragment-index": "0",
                                        "style": "line-height: 80px;"
                                    },
                                    "value": "Flexible"
                                },
                                {
                                    "name": "li",
                                    "attributes": {
                                        "class": "fragment",
                                        "data-fragment-index": "0",
                                        "style": "line-height: 90px;"
                                    },
                                    "value": "Extensible"
                                },
                                {
                                    "name": "li",
                                    "attributes": {
                                        "class": "fragment",
                                        "data-fragment-index": "1",
                                        "style": "line-height: 60px;"
                                    },
                                    "value": "Encourages SoC by Reducing Coupling and Increasing Cohesion"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "notes",
                    "value": [
                        "Itai: Amazing! This will allow;",
                        "Flexibility & Extensibility - since we can add or remove as many consumers as we want without having to change our architecture",
                        "It is also encourages SoC by reducing the coupling and increasing the cohesion",
                        "Miki: You cannot just drop buzzwords as Coupling and Cohesion, Please explain"
                    ]
                }
            ]
        ]
    },
    {
        "steps": [
            [
                {
                    "name": "div",
                    "value": [
                        {
                            "name": "ul",
                            "value": [
                                {
                                    "name": "li",
                                    "attributes": {
                                        "style": "line-height: 50px;"
                                    },
                                    "value": "Coupling: The Degree of Dependency Between Modules<br><br>"
                                },
                                {
                                    "name": "li",
                                    "attributes": {
                                        "class": "fragment",
                                        "data-fragment-index": "0",
                                        "style": "line-height: 50px;"
                                    },
                                    "value": "Cohesion: The Measure of How Strongly-Related is the Set of Functions Performed by a Module"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "notes",
                    "value": [
                        "Itai: OK, Behind any structured programing principles, there is structured design with its two main core principles: Coupling & Cohesion",
                        "As you all know (probably apart from my friend Miki here), Coupling is the degree of dependency between modules",
                        "And Cohesion is the degree of relation between a set of function on a module"
                    ]
                }
            ]
        ]
    },
    {
        "steps": [
            [
                {
                    "name": "h2",
                    "value": "Cons"
                },
                {
                    "name": "img",
                    "attributes": {
                        "src": "https://cloud.githubusercontent.com/assets/3624786/8115636/6c4e8ba6-1085-11e5-806d-ed916000f6e8.png",
                        "style": "width: 120px;"
                    }
                },
                {
                    "name": "div",
                    "attributes": {
                        "style": "height: 800px;"
                    },
                    "value": [
                        {
                            "name": "ul",
                            "value": [
                                {
                                    "name": "li",
                                    "attributes": {
                                        "class": "fragment",
                                        "data-fragment-index": "0",
                                        "style": "line-height: 90px;"
                                    },
                                    "value": "Control Flow"
                                },
                                {
                                    "name": "li",
                                    "attributes": {
                                        "class": "fragment",
                                        "data-fragment-index": "0"
                                    },
                                    "value": "Complexity - Harder to Follow and Debug"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "notes",
                    "value": [
                        "יש הטוענים כי שימוש באיבנטים ואיבנט באס מביאים איתם מספר חסרונות: קונטרול פלו בעייתי ומורכבות מכיוון שסדר האיבנטים אינו ידוע וסדר הקריאה להנדלרים לא ידוע וגם יכול להשתנות.",
                        "מכאן שגם קיים קושי לדבג את הפלו. לכן כאשר האפליקציה שלנו היא איבנט דריבן ואנחנו משתמשים באיבנטים אנחנו לעולם לא נסתמך על הסדר שלהם. "
                    ]
                }
            ]
        ]
    },
    {
        "steps": [
            [
                {
                    "name": "h3",
                    "value": "Javascript is Callback Driven by Nature"
                },
                {
                    "name": "notes",
                    "value": [
                        "Itai: And coming to javascript, so Javascript is callback driven by nature"
                    ]
                }
            ]
        ]
    },
    {
        "steps": [
            [
                {
                    "name": "p",
                    "attributes": {
                        "style": "height: 600px;"
                    },
                    "value": [
                        {
                            "name": "textarea",
                            "attributes": {
                                "id": "native_events_snippet",
                                "class": "code absolute-element",
                                "mode": "javascript",
                                "style": "width: 900px; height: 140px; max-height: none; max-width: none; position: absolute; z-index: 4; left: 50px; top: 100px;"
                            },
                            "value": ""
                        }
                    ]
                },
                {
                    "name": "notes",
                    "value": [
                        "Itai: If we'll look at a basic example of a javascript DOM button, lets say we have a belly button for example",
                        "We can interact with it by assigning an handler for the click event - You all know this basic example"
                    ]
                }
            ]
        ]
    },
    {
        "steps": [
            [
                {
                    "name": "h3",
                    "attributes": {
                        "style": "line-height: 70px;"
                    },
                    "value": "MVC Frameworks, Embraces SoC and Supplies Needed Tools for Using Pub/Sub"
                },
                {
                    "name": "notes",
                    "value": [
                        "Itai: This was a very basic example for some native javascript code, but usually, we work with frameworks and libraries which abstract many things and allows us to better modularize our code",
                        "All of those MVC frameworks, embraces SoC and also supplies internal tools for implementing Pub/Sub model as part of the framework."
                    ]
                }
            ]
        ]
    },
    {
        "steps": [
            [
                {
                    "name": "div",
                    "attributes": {
                        "style": "height: 100px;"
                    },
                    "value": [
                        {
                            "name": "textarea",
                            "attributes": {
                                "id": "backbone_message_service_snippet.0",
                                "class": "code absolute-element",
                                "mode": "javascript"
                            },
                            "value": ""
                        }
                    ]
                },
                {
                    "name": "div",
                    "attributes": {
                        "style": "height: 400px;",
                        "class": "fragment",
                        "data-fragment-index": "0"

                    },
                    "value": [
                        {
                            "name": "textarea",
                            "attributes": {
                                "id": "backbone_message_service_snippet.1",
                                "class": "code absolute-element",
                                "mode": "javascript"
                            },
                            "value": ""
                        }
                    ]
                },
                {
                    "name": "notes",
                    "value": [
                        "Itai: Backbone, for example, have the Backbone.Events which allows simple consuming and triggering of events"
                    ]
                }
            ]
        ]
    },
    {
        "steps": [
            [
                {
                    "name": "div",
                    "attributes": {
                        "style": "height: 35px;"
                    },
                    "value": [
                        {
                            "name": "textarea",
                            "attributes": {
                                "id": "backbone_model_snippet.0",
                                "class": "code absolute-element",
                                "mode": "javascript"
                            },
                            "value": ""
                        }
                    ]
                },
                {
                    "name": "div",
                    "attributes": {
                        "style": "height: 230px;",
                        "class": "fragment",
                        "data-fragment-index": "0"

                    },
                    "value": [
                        {
                            "name": "textarea",
                            "attributes": {
                                "id": "backbone_model_snippet.1",
                                "class": "code absolute-element",
                                "mode": "javascript"
                            },
                            "value": ""
                        }
                    ]
                },
                {
                    "name": "div",
                    "attributes": {
                        "style": "height: 300px;",
                        "class": "fragment",
                        "data-fragment-index": "1"

                    },
                    "value": [
                        {
                            "name": "textarea",
                            "attributes": {
                                "id": "backbone_model_snippet.2",
                                "class": "code absolute-element",
                                "mode": "javascript"
                            },
                            "value": ""
                        }
                    ]
                },
                {
                    "name": "notes",
                    "value": [
                        "Itai: Backbone itself uses the Backbone.Events to implement allow changes awareness on the Backbone.Model",
                        "In this Homer Example, when Homer eats a doughnut, an event is triggered and the view redraws a fatter homer"
                    ]
                }
            ]
        ]
    },
    {
        "steps": [
            [
                {
                    "name": "h2",
                    "value": "iOS NSNotification"
                },
                {
                    "name": "div",
                    "attributes": {
                        "style": "height: 600px; width: 900px; margin-top: 100px; text-align: left;"
                    },
                    "value": [
                        {
                            "name": "ul",
                            "value": [
                                {
                                    "name": "li",
                                    "attributes": {
                                        "class": "fragment",
                                        "data-fragment-index": "0",
                                        "style": "line-height: 80px;"
                                    },
                                    "value": "Encapsulates information so that it can be broadcast to other objects"
                                },
                                {
                                    "name": "li",
                                    "attributes": {
                                        "class": "fragment",
                                        "data-fragment-index": "1",
                                        "style": "line-height: 80px;"
                                    },
                                    "value": "Broadcast done using NSNotificationCenter object"
                                },
                                {
                                    "name": "li",
                                    "attributes": {
                                        "class": "fragment",
                                        "data-fragment-index": "1",
                                        "style": "line-height: 90px;"
                                    },
                                    "value": "Contains name that is a tag for identifying the notification"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "notes",
                    "value": [
                        "write stuffItai: The scope is the glue for everything. It acts as the elements which connects the controllers, the data and the presentation layer.",
                        "When trying to create a controller to controller communication, the simplest way for controllers to communicate is through the use of scope. Each time a controller is instantiated within another controller, that controller (the child) inherits the scope from the parent controller.",
                        "Inherited scope, though, does not deal with communication between siblings. For that, we can used event-based communication with the Angular services $on, $emit, and $broadcast."
                    ]
                }
            ]
        ]
    },
    {
        "steps": [
            [
                {
                    "name": "div",
                    "attributes": {
                        "style": "height: 380px;"
                    },
                    "value": [
                        {
                            "name": "textarea",
                            "attributes": {
                                "id": "ios_nsnotification.0",
                                "class": "code absolute-element",
                                "mode": "clike"
                            },
                            "value": ""
                        }
                    ]
                },
                {
                    "name": "div",
                    "attributes": {
                        "style": "height: 600px;",
                        "class": "fragment",
                        "data-fragment-index": "0"

                    },
                    "value": [
                        {
                            "name": "textarea",
                            "attributes": {
                                "id": "ios_nsnotification.1",
                                "class": "code absolute-element",
                                "mode": "clike"
                            },
                            "value": ""
                        }
                    ]
                },
                {
                    "name": "notes",
                    "value": [
                        "All instances of TestClass will be notified"
                    ]
                }
            ]
        ]
    },
    {
        "steps": [
            [
                {
                    "name": "h2",
                    "value": "NodeJS EventEmitter"
                },
                {
                    "name": "div",
                    "attributes": {
                        "style": "height: 30px;"
                    },
                    "value": [
                        {
                            "name": "textarea",
                            "attributes": {
                                "id": "node_eventemitter.0",
                                "class": "code absolute-element",
                                "mode": "javascript"
                            },
                            "value": ""
                        }
                    ]
                },
                {
                    "name": "div",
                    "attributes": {
                        "style": "height: 200px;",
                        "class": "fragment",
                        "data-fragment-index": "0"

                    },
                    "value": [
                        {
                            "name": "textarea",
                            "attributes": {
                                "id": "node_eventemitter.1",
                                "class": "code absolute-element",
                                "mode": "javascript"
                            },
                            "value": ""
                        }
                    ]
                },
                {
                    "name": "notes",
                    "value": [
                        "Itai: In this example, we are using the message service to assemble the avengers across multiple different controllers",
                        "So this is how we can use event driven concepts with the given tools of the framework we are working with"
                    ]
                }
            ]
        ]
    },
    {
        "steps": [
            [
                {
                    "name": "h2",
                    "value": "Guava Event Bus"
                },
                {
                    "name": "div",
                    "attributes": {
                        "style": "height: 500px;",
                        "class": "fragment",
                        "data-fragment-index": "0"

                    },
                    "value": [
                        {
                            "name": "textarea",
                            "attributes": {
                                "id": "android_guava.0",
                                "class": "code absolute-element",
                                "mode": "clike"
                            },
                            "value": ""
                        }
                    ]
                },
                {
                    "name": "notes",
                    "value": [
                        "write stuff"
                    ]
                }
            ]
        ]
    },
    {
        "steps": [
            [
                {
                    "name": "h2",
                    "value": "Unified Window Example"
                }
            ]
        ]
    },
    {
        "steps": [
            [
                {
                    "name": "h2",
                    "value": "Event Sourcing"
                },
                {
                    "name": "div",
                    "attributes": {
                        "style": "height: 600px; width: 900px; margin-top: 100px; text-align: left;"
                    },
                    "value": [
                        {
                            "name": "ul",
                            "value": [
                                {
                                    "name": "li",
                                    "attributes": {
                                        "class": "fragment",
                                        "data-fragment-index": "0",
                                        "style": "line-height: 80px;"
                                    },
                                    "value": "Allows understanding of the application state and how we got there"
                                },
                                {
                                    "name": "li",
                                    "attributes": {
                                        "class": "fragment",
                                        "data-fragment-index": "1",
                                        "style": "line-height: 80px;"
                                    },
                                    "value": "Store each event in sequence"
                                },
                                {
                                    "name": "li",
                                    "attributes": {
                                        "class": "fragment",
                                        "data-fragment-index": "1",
                                        "style": "line-height: 90px;"
                                    },
                                    "value": "We can query these events and we can also use the event log to reconstruct past states"
                                }
                            ]
                        }
                    ]
                }
            ]
        ]
    },
    {
        "steps": [
            [
                {
                    "name": "div",
                    "attributes": {
                        "style": "width: 100%; height: 600px; max-height: none; max-width: none;"
                    },
                    "value": [
                        {
                            "name": "img",
                            "attributes": {
                                "src": "https://cloud.githubusercontent.com/assets/3624786/7811015/a7785186-03af-11e5-9647-d7e3faf56ce1.png",
                                "style": "width: 800px; height: 500px; max-height: none; max-width: none; position: absolute; z-index: 4; left: 100px; top: 6px;",
                                "class": "absolute-element"
                            }
                        }
                    ]
                },
                {
                    "name": "notes",
                    "value": [
                        "Miki & Itai: Thank you"
                    ]
                }
            ]
        ]
    }
]
